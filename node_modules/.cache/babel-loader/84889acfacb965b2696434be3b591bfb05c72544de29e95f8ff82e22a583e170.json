{"ast":null,"code":"var _jsxFileName = \"/Users/ztahseen/Documents/Reactjs/simplilearn/state/myapp/src/Components/WorkExp/getDataWork.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport WorkExp from './WorkExp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getDataWork() {\n  _s();\n  const [data, setData] = useState(null);\n  let formattedData = [];\n  const columnNames = [\"Order\", \"CompanyName\", \"Experience\", \"Position\"];\n  useEffect(() => {\n    fetch('https://mocki.io/v1/e0440544-4ef9-4a94-9729-ea4ccd0b3250').then(response => response.json()).then(json => setData(json)).catch(error => console.error(error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(WorkExp, {\n      columnNames: columnNames,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s(getDataWork, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\nexport default getDataWork;","map":{"version":3,"names":["React","useState","useEffect","WorkExp","jsxDEV","_jsxDEV","getDataWork","_s","data","setData","formattedData","columnNames","fetch","then","response","json","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/ztahseen/Documents/Reactjs/simplilearn/state/myapp/src/Components/WorkExp/getDataWork.js"],"sourcesContent":["\nimport React, {useState,useEffect} from 'react';\nimport WorkExp from './WorkExp';\n\nfunction getDataWork(){\n    const [data, setData] = useState(null);\n    let formattedData = [];\n    const columnNames=[\n        \"Order\",\n        \"CompanyName\",\n        \"Experience\",\n        \"Position\"\n      ];\n\n    useEffect(() => {\n      fetch('https://mocki.io/v1/e0440544-4ef9-4a94-9729-ea4ccd0b3250')\n        .then(response => response.json())\n        .then(json => setData(json))\n        .catch(error => console.error(error));\n    }, []);\n    \n    return (\n        <div>\n           <WorkExp columnNames={columnNames} data={data}/>\n        </div>\n\n    )\n}\n\nexport default getDataWork"],"mappings":";;AACA,OAAOA,KAAK,IAAGC,QAAQ,EAACC,SAAS,QAAO,OAAO;AAC/C,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,WAAWA,CAAA,EAAE;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACtC,IAAIS,aAAa,GAAG,EAAE;EACtB,MAAMC,WAAW,GAAC,CACd,OAAO,EACP,aAAa,EACb,YAAY,EACZ,UAAU,CACX;EAEHT,SAAS,CAAC,MAAM;IACdU,KAAK,CAAC,0DAA0D,CAAC,CAC9DC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACE,IAAI,IAAIN,OAAO,CAACM,IAAI,CAAC,CAAC,CAC3BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIZ,OAAA;IAAAc,QAAA,eACGd,OAAA,CAACF,OAAO;MAACQ,WAAW,EAAEA,WAAY;MAACH,IAAI,EAAEA;IAAK;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAGd;AAAChB,EAAA,CAvBQD,WAAW;AAyBpB,eAAeA,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}